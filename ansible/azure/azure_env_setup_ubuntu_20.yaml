
- name : Preparing the VM to be migrated to Azure
  become: true
  become_method: sudo
  hosts: all
  force_handlers: True
  tasks:
    - name: Backup sources list
      shell: "cp /etc/apt/sources.list /etc/apt/sources.list.bak"

    - name: Install azcopy
      shell: |
        wget https://azcopyvnext.azureedge.net/release20201021/azcopy_linux_amd64_10.6.1.tar.gz && \
        tar -zxf ./azcopy_linux_amd64_10.6.1.tar.gz && \
        mv ./azcopy_linux_amd64_10.6.1/azcopy /usr/bin && \
        chmod 777 /usr/bin/azcopy

    - block:
      - name: Installing azure tools and python
        apt:
          pkg:
          - python
          - python3-pip
          - linux-azure
          - linux-image-azure
          - linux-headers-azure
          - linux-tools-common
          - linux-cloud-tools-common
          - linux-tools-azure
          - linux-cloud-tools-azure
          - npm
          update_cache: yes
        ignore_errors: True 
      rescue:
      - name: Update Accepted
        shell: "apt update -y"
      - name: Failback installation "Installing azure tools and python"
        shell: "apt install python python3-pip linux-azure linux-image-azure linux-headers-azure linux-tools-common linux-cloud-tools-common linux-tools-azure linux-cloud-tools-azure unzip -y"
    
    - name: Update grub entry
      shell: "sed -i '/GRUB_CMDLINE_LINUX_DEFAULT/c\\GRUB_CMDLINE_LINUX_DEFAULT=\"console=tty1 console=ttyS0,115200n8 earlyprintk=ttyS0,115200 rootdelay=300 quiet splash\"
      ' /etc/default/grub"
      ignore_errors: True

    - block:
      - name: Install cloud init, netplan and walinuxagent
        apt:
          pkg:
          - cloud-init
          - netplan.io
          - walinuxagent
          update_cache: yes
        ignore_errors: True
      - name: Stopping walinuxagent
        systemd:
          name: walinuxagent
          state: stopped
      rescue:
      - name: Update apt.. older way
        shell: "apt update -y"
      - name: Install cloud init, netplan.io and walinuxagent.. older way
        shell: "apt install cloud-init netplan.io walinuxagent -y"
      - name: Stopping walinuxagent .. older way
        shell: "systemctl stop walinuxagent"
      tags:
        - devel
      ignore_errors: True

    - name: Remove cloud configuration files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/cloud/cloud.cfg.d/50-curtin-networking.cfg
        - /etc/cloud/cloud.cfg.d/curtin-preserve-sources.cfg
        - /etc/cloud/ds-identify.cfg
        - /etc/netplan/*.yaml
      ignore_errors: True
  
    - name: Update walinuxagent config
      shell: |
        sed -i 's/Provisioning.Enabled=y/Provisioning.Enabled=n/g' /etc/waagent.conf;
        sed -i 's/Provisioning.UseCloudInit=n/Provisioning.UseCloudInit=y/g' /etc/waagent.conf;
        sed -i 's/Provisioning.RegenerateSshHostKeyPair=y/Provisioning.RegenerateSshHostKeyPair=n/g' /etc/waagent.conf
        sed -i 's/ResourceDisk.Format=y/ResourceDisk.Format=n/g' /etc/waagent.conf;
        sed -i 's/ResourceDisk.EnableSwap=y/ResourceDisk.EnableSwap=n/g' /etc/waagent.conf;
        cat >> /etc/waagent.conf << EOF
        # For Azure Linux agent version >= 2.2.45, this is the option to configure,
        # enable, or disable the provisioning behavior of the Linux agent.
        # Accepted values are auto (default), waagent, cloud-init, or disabled.
        # A value of auto means that the agent will rely on cloud-init to handle
        # provisioning if it is installed and enabled, which in this case it will.
        Provisioning.Agent=auto
        EOF
      ignore_errors: True

    - name: Cloud init clean
      shell: "cloud-init clean --logs --seed"
      ignore_errors: True

    - name: Remove stale files
      file:
        path: /var/lib/cloud/
        state: absent
      ignore_errors: True

    - name: stop walinuxagent
      systemd:
        name: walinuxagent
        state: stopped
      ignore_errors: True

    - name: Removing wagent logs and files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /var/lib/waagent/
        - /var/log/waagent.log
      ignore_errors: True

    - name: Deprovision waagent
      shell: |
        waagent -force -deprovision
        rm -f ~/.bash_history
        export HISTSIZE=0
      ignore_errors: True